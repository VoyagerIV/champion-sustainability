{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Event from \"../components/Event\";\nimport data from \"../db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getStatus = function getStatus(event) {\n  if (event.status.joined || event.status.organised) {\n    if (event.status.complete) {\n      return \"attended\";\n    } else {\n      return \"attending\";\n    }\n  }\n  return \"\";\n};\nvar OrganisedEvents = function OrganisedEvents(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  useEffect(function () {\n    setEvents(data[\"events\"].filter(function (event) {\n      if (event.status.organised) {\n        return true;\n      }\n    }));\n  }, []);\n  return _jsx(View, {\n    style: styles.screenContainer,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.list,\n      children: [events.map(function (event, indx) {\n        return _jsx(Event, {\n          image: event.image,\n          title: event.title,\n          date: event.date,\n          time: event.time,\n          location: event.location,\n          categories: event.categories,\n          status: event.status.complete ? \"attended\" : \"attending\",\n          onPress: function onPress() {\n            return navigation.navigate(\"Event\", {\n              image: event.image,\n              title: event.title,\n              organiser: event.organiser,\n              date: event.organiser,\n              time: event.time,\n              location: event.location,\n              attendees: event.attendees,\n              capacity: event.capacity,\n              categories: event.categories,\n              description: event.description,\n              comments: event.comments,\n              status: getStatus(event)\n            });\n          }\n        }, indx);\n      }), _jsx(View, {\n        style: styles.offset\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingHorizontal: 23,\n    paddingTop: 150\n  },\n  list: {\n    width: \"100%\"\n  },\n  offset: {\n    height: 50\n  }\n});\nexport default OrganisedEvents;","map":{"version":3,"names":["useEffect","useState","Event","data","getStatus","event","status","joined","organised","complete","OrganisedEvents","navigation","events","setEvents","filter","styles","screenContainer","list","map","indx","image","title","date","time","location","categories","navigate","organiser","attendees","capacity","description","comments","offset","StyleSheet","create","width","maxHeight","display","alignItems","paddingHorizontal","paddingTop","height"],"sources":["/home/mohammad/Documents/GitHub/champion-sustainability/screens/OrganisedEvents.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { StyleSheet, View, ScrollView } from \"react-native\";\n\nimport Event from \"../components/Event\";\n\nimport data from \"../db\";\n\nconst getStatus = (event) => {\n  if (event.status.joined || event.status.organised) {\n    if (event.status.complete) {\n      return \"attended\";\n    } else {\n      return \"attending\";\n    }\n  }\n  return \"\";\n};\n\nconst OrganisedEvents = ({ navigation }) => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    setEvents(\n      data[\"events\"].filter((event) => {\n        // only show organised events\n        if (event.status.organised) {\n          return true;\n        }\n      })\n    );\n  }, []);\n\n  return (\n    <View style={styles.screenContainer}>\n      <ScrollView contentContainerStyle={styles.list}>\n        {events.map((event, indx) => {\n          return (\n            <Event\n              key={indx}\n              image={event.image}\n              title={event.title}\n              date={event.date}\n              time={event.time}\n              location={event.location}\n              categories={event.categories}\n              status={event.status.complete ? \"attended\" : \"attending\"}\n              onPress={() =>\n                navigation.navigate(\"Event\", {\n                  image: event.image,\n                  title: event.title,\n                  organiser: event.organiser,\n                  date: event.organiser,\n                  time: event.time,\n                  location: event.location,\n                  attendees: event.attendees,\n                  capacity: event.capacity,\n                  categories: event.categories,\n                  description: event.description,\n                  comments: event.comments,\n                  status: getStatus(event),\n                })\n              }\n            />\n          );\n        })}\n        <View style={styles.offset} />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingHorizontal: 23,\n    paddingTop: 150,\n  },\n  list: {\n    width: \"100%\",\n  },\n  offset: {\n    height: 50,\n  },\n});\n\nexport default OrganisedEvents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}