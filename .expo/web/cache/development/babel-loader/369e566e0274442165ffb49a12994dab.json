{"ast":null,"code":"\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { Formik } from \"formik\";\nimport { IconComponentProvider, Icon } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  SearchWindow: {\n    backgroundColor: \"#DAF6E6\",\n    borderRadius: 20,\n    padding: 10,\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  }\n});\nvar SearchIcon = function SearchIcon() {\n  return _jsx(_Fragment, {\n    children: _jsx(Icon, {\n      name: \"magnify\",\n      size: 25,\n      color: \"black\"\n    })\n  });\n};\nvar SB = function SB(props) {\n  return _jsx(Formik, {\n    initialValues: {\n      search: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    children: function children(_ref) {\n      var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n      return _jsxs(View, {\n        style: styles.SearchWindow,\n        children: [_jsx(TextInput, {\n          onChangeText: handleChange(\"search\"),\n          onBlur: handleBlur(\"search\"),\n          value: values.email,\n          placeholder: \"Search by Location or Event Name\"\n        }), _jsx(TouchableHighlight, {\n          onPress: handleSubmit,\n          children: _jsx(IconComponentProvider, {\n            IconComponent: MaterialCommunityIcons,\n            children: _jsx(SearchIcon, {})\n          })\n        })]\n      });\n    }\n  });\n};\nexport var SearchBar = function SearchBar(_ref2) {\n  var value = _ref2.value,\n    setValue = _ref2.setValue,\n    submitSearch = _ref2.submitSearch;\n  return _jsxs(View, {\n    style: styles.SearchWindow,\n    children: [_jsx(TextInput, {\n      onChangeText: setValue,\n      value: value,\n      placeholder: \"Search by Location or Event Name\"\n    }), _jsx(TouchableHighlight, {\n      onPress: submitSearch,\n      children: _jsx(IconComponentProvider, {\n        IconComponent: MaterialCommunityIcons,\n        children: _jsx(SearchIcon, {})\n      })\n    })]\n  });\n};\nexport var NoButtonSB = function NoButtonSB(_ref3) {\n  var value = _ref3.value,\n    setValue = _ref3.setValue;\n  return _jsxs(View, {\n    style: styles.SearchWindow,\n    children: [_jsx(TextInput, {\n      onChangeText: setValue,\n      value: value,\n      placeholder: \"Search by Location or Event Name\"\n    }), _jsx(MaterialIcons, {\n      name: \"search\",\n      color: \"#d1d5db\",\n      size: 25\n    })]\n  });\n};\nexport default SB;","map":{"version":3,"names":["React","Formik","IconComponentProvider","Icon","MaterialCommunityIcons","MaterialIcons","styles","StyleSheet","create","SearchWindow","backgroundColor","borderRadius","padding","flexDirection","width","justifyContent","SearchIcon","SB","props","search","values","console","log","handleChange","handleBlur","handleSubmit","email","SearchBar","value","setValue","submitSearch","NoButtonSB"],"sources":["/home/mohammad/Documents/GitHub/champion-sustainability/components/SearchBar.jsx"],"sourcesContent":["// Formik x React Native example\nimport React from \"react\";\nimport {\n  Button,\n  TextInput,\n  View,\n  StyleSheet,\n  TouchableHighlight,\n} from \"react-native\";\nimport { Formik } from \"formik\";\nimport { IconComponentProvider, Icon } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\n\nconst styles = StyleSheet.create({\n  SearchWindow: {\n    backgroundColor: \"#DAF6E6\",\n    borderRadius: 20,\n    padding: 10,\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n});\n\nconst SearchIcon = () => (\n  <>\n    <Icon name=\"magnify\" size={25} color=\"black\" />\n  </>\n);\n\nconst SB = (props) => {\n  return (\n    <Formik\n      initialValues={{ search: \"\" }}\n      onSubmit={(values) => console.log(values)}\n    >\n      {({ handleChange, handleBlur, handleSubmit, values }) => (\n        <View style={styles.SearchWindow}>\n          <TextInput\n            onChangeText={handleChange(\"search\")}\n            onBlur={handleBlur(\"search\")}\n            value={values.email}\n            placeholder=\"Search by Location or Event Name\"\n          />\n          <TouchableHighlight onPress={handleSubmit}>\n            <IconComponentProvider IconComponent={MaterialCommunityIcons}>\n              <SearchIcon />\n            </IconComponentProvider>\n          </TouchableHighlight>\n        </View>\n      )}\n    </Formik>\n  );\n};\n\nexport const SearchBar = ({ value, setValue, submitSearch }) => {\n  return (\n    <View style={styles.SearchWindow}>\n      <TextInput\n        onChangeText={setValue}\n        value={value}\n        placeholder=\"Search by Location or Event Name\"\n      />\n      <TouchableHighlight onPress={submitSearch}>\n        <IconComponentProvider IconComponent={MaterialCommunityIcons}>\n          <SearchIcon />\n        </IconComponentProvider>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\nexport const NoButtonSB = ({ value, setValue }) => {\n  return (\n    <View style={styles.SearchWindow}>\n      <TextInput\n        onChangeText={setValue}\n        value={value}\n        placeholder=\"Search by Location or Event Name\"\n      />\n      <MaterialIcons name=\"search\" color=\"#d1d5db\" size={25} />\n    </View>\n  );\n};\n\nexport default SB;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAQ1B,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,qBAAqB,EAAEC,IAAI,QAAQ,6BAA6B;AACzE,OAAOC,sBAAsB,MAAM,2CAA2C;AAC9E,OAAOC,aAAa,MAAM,kCAAkC;AAAC;AAAA;AAAA;AAE7D,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,YAAY,EAAE;IACZC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAG,SAAbA,UAAU;EAAA,OACd;IAAA,UACE,KAAC,IAAI;MAAC,IAAI,EAAC,SAAS;MAAC,IAAI,EAAE,EAAG;MAAC,KAAK,EAAC;IAAO;EAAG,EAC9C;AAAA,CACJ;AAED,IAAMC,EAAE,GAAG,SAALA,EAAE,CAAIC,KAAK,EAAK;EACpB,OACE,KAAC,MAAM;IACL,aAAa,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAC9B,QAAQ,EAAE,kBAACC,MAAM;MAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAAA,CAAC;IAAA,UAEzC;MAAA,IAAGG,YAAY,QAAZA,YAAY;QAAEC,UAAU,QAAVA,UAAU;QAAEC,YAAY,QAAZA,YAAY;QAAEL,MAAM,QAANA,MAAM;MAAA,OAChD,MAAC,IAAI;QAAC,KAAK,EAAEd,MAAM,CAACG,YAAa;QAAA,WAC/B,KAAC,SAAS;UACR,YAAY,EAAEc,YAAY,CAAC,QAAQ,CAAE;UACrC,MAAM,EAAEC,UAAU,CAAC,QAAQ,CAAE;UAC7B,KAAK,EAAEJ,MAAM,CAACM,KAAM;UACpB,WAAW,EAAC;QAAkC,EAC9C,EACF,KAAC,kBAAkB;UAAC,OAAO,EAAED,YAAa;UAAA,UACxC,KAAC,qBAAqB;YAAC,aAAa,EAAErB,sBAAuB;YAAA,UAC3D,KAAC,UAAU;UAAG;QACQ,EACL;MAAA,EAChB;IAAA;EACR,EACM;AAEb,CAAC;AAED,OAAO,IAAMuB,SAAS,GAAG,SAAZA,SAAS,QAA0C;EAAA,IAApCC,KAAK,SAALA,KAAK;IAAEC,QAAQ,SAARA,QAAQ;IAAEC,YAAY,SAAZA,YAAY;EACvD,OACE,MAAC,IAAI;IAAC,KAAK,EAAExB,MAAM,CAACG,YAAa;IAAA,WAC/B,KAAC,SAAS;MACR,YAAY,EAAEoB,QAAS;MACvB,KAAK,EAAED,KAAM;MACb,WAAW,EAAC;IAAkC,EAC9C,EACF,KAAC,kBAAkB;MAAC,OAAO,EAAEE,YAAa;MAAA,UACxC,KAAC,qBAAqB;QAAC,aAAa,EAAE1B,sBAAuB;QAAA,UAC3D,KAAC,UAAU;MAAG;IACQ,EACL;EAAA,EAChB;AAEX,CAAC;AAED,OAAO,IAAM2B,UAAU,GAAG,SAAbA,UAAU,QAA4B;EAAA,IAAtBH,KAAK,SAALA,KAAK;IAAEC,QAAQ,SAARA,QAAQ;EAC1C,OACE,MAAC,IAAI;IAAC,KAAK,EAAEvB,MAAM,CAACG,YAAa;IAAA,WAC/B,KAAC,SAAS;MACR,YAAY,EAAEoB,QAAS;MACvB,KAAK,EAAED,KAAM;MACb,WAAW,EAAC;IAAkC,EAC9C,EACF,KAAC,aAAa;MAAC,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAC,SAAS;MAAC,IAAI,EAAE;IAAG,EAAG;EAAA,EACpD;AAEX,CAAC;AAED,eAAeX,EAAE"},"metadata":{},"sourceType":"module"}