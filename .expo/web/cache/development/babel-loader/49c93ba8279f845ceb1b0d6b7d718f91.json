{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollViewGesture = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\nvar _constants = require(\"./constants\");\nvar _store = require(\"./store\");\nvar _dealWithAnimation = require(\"./utils/dealWithAnimation\");\nvar _this = this,\n  _jsxFileName = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx\";\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar IScrollViewGesture = function IScrollViewGesture(props) {\n  var _React$useContext = _react.default.useContext(_store.CTX),\n    _React$useContext$pro = _React$useContext.props,\n    vertical = _React$useContext$pro.vertical,\n    pagingEnabled = _React$useContext$pro.pagingEnabled,\n    snapEnabled = _React$useContext$pro.snapEnabled,\n    panGestureHandlerProps = _React$useContext$pro.panGestureHandlerProps,\n    infinite = _React$useContext$pro.loop,\n    scrollAnimationDuration = _React$useContext$pro.scrollAnimationDuration,\n    withAnimation = _React$useContext$pro.withAnimation,\n    enabled = _React$useContext$pro.enabled,\n    dataLength = _React$useContext$pro.dataLength;\n  var size = props.size,\n    translation = props.translation,\n    testID = props.testID,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    onScrollBegin = props.onScrollBegin,\n    onScrollEnd = props.onScrollEnd,\n    onTouchBegin = props.onTouchBegin,\n    onTouchEnd = props.onTouchEnd;\n  var maxPage = dataLength;\n  var isHorizontal = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      return !vertical;\n    };\n    _f._closure = {\n      vertical: vertical\n    };\n    _f.asString = \"function _f(){const{vertical}=jsThis._closure;{return!vertical;}}\";\n    _f.__workletHash = 14495821007639;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (67:39)\";\n    return _f;\n  }(), [vertical]);\n  var touching = (0, _reactNativeReanimated.useSharedValue)(false);\n  var scrollEndTranslation = (0, _reactNativeReanimated.useSharedValue)(0);\n  var scrollEndVelocity = (0, _reactNativeReanimated.useSharedValue)(0);\n  var _withSpring = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var defaultWithAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n        };\n        _f._closure = {\n          onFinished: onFinished,\n          runOnJS: _reactNativeReanimated.runOnJS\n        };\n        _f.asString = \"function _f(isFinished){const{onFinished,runOnJS}=jsThis._closure;{if(isFinished)onFinished&&runOnJS(onFinished)();}}\";\n        _f.__workletHash = 3881957308013;\n        _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (85:8)\";\n        return _f;\n      }());\n    };\n    _f._closure = {\n      scrollAnimationDuration: scrollAnimationDuration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{scrollAnimationDuration,Easing,dealWithAnimation,withAnimation,runOnJS}=jsThis._closure;{var _withAnimation;const defaultWithAnimation={type:\\\"timing\\\",config:{duration:scrollAnimationDuration+100,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,function(isFinished){\\\"worklet\\\";if(isFinished)onFinished&&runOnJS(onFinished)();});}}\";\n    _f.__workletHash = 4492029393801;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (73:4)\";\n    return _f;\n  }(), [scrollAnimationDuration, withAnimation]);\n  var endWithSpring = _react.default.useCallback(function () {\n    var _f = function _f(onFinished) {\n      var origin = translation.value;\n      var velocity = scrollEndVelocity.value;\n      if (!pagingEnabled) {\n        if (snapEnabled) {\n          var nextPage = Math.round((origin + velocity * 0.4) / size) * size;\n          translation.value = _withSpring(nextPage, onFinished);\n          return;\n        }\n        translation.value = (0, _reactNativeReanimated.withDecay)({\n          velocity: velocity,\n          deceleration: 0.999\n        });\n        return;\n      }\n      var direction = -(scrollEndTranslation.value >= 0 ? 1 : -1);\n      var computed = direction < 0 ? Math.ceil : Math.floor;\n      var page = computed(-translation.value / size);\n      var finalPage = page + direction;\n      if (!infinite) finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n      translation.value = _withSpring(-finalPage * size, onFinished);\n    };\n    _f._closure = {\n      translation: translation,\n      scrollEndVelocity: scrollEndVelocity,\n      pagingEnabled: pagingEnabled,\n      snapEnabled: snapEnabled,\n      size: size,\n      _withSpring: _withSpring,\n      withDecay: _reactNativeReanimated.withDecay,\n      scrollEndTranslation: scrollEndTranslation,\n      infinite: infinite,\n      maxPage: maxPage\n    };\n    _f.asString = \"function _f(onFinished){const{translation,scrollEndVelocity,pagingEnabled,snapEnabled,size,_withSpring,withDecay,scrollEndTranslation,infinite,maxPage}=jsThis._closure;{const origin=translation.value;const velocity=scrollEndVelocity.value;if(!pagingEnabled){if(snapEnabled){const nextPage=Math.round((origin+velocity*0.4)/size)*size;translation.value=_withSpring(nextPage,onFinished);return;}translation.value=withDecay({velocity:velocity,deceleration:0.999});return;}const direction=-(scrollEndTranslation.value>=0?1:-1);const computed=direction<0?Math.ceil:Math.floor;const page=computed(-translation.value/size);let finalPage=page+direction;if(!infinite)finalPage=Math.min(maxPage-1,Math.max(0,finalPage));translation.value=_withSpring(-finalPage*size,onFinished);}}\";\n    _f.__workletHash = 7195121800163;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (96:4)\";\n    return _f;\n  }(), [translation, scrollEndVelocity.value, pagingEnabled, size, scrollEndTranslation.value, infinite, _withSpring, snapEnabled, maxPage]);\n  var onFinish = _react.default.useCallback(function () {\n    var _f = function _f(isFinished) {\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n      }\n    };\n    _f._closure = {\n      touching: touching,\n      onScrollEnd: onScrollEnd,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(isFinished){const{touching,onScrollEnd,runOnJS}=jsThis._closure;{if(isFinished){touching.value=false;onScrollEnd&&runOnJS(onScrollEnd)();}}}\";\n    _f.__workletHash = 12308424749737;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (143:4)\";\n    return _f;\n  }(), [onScrollEnd, touching]);\n  var activeDecay = _react.default.useCallback(function () {\n    var _f = function _f() {\n      touching.value = true;\n      translation.value = (0, _reactNativeReanimated.withDecay)({\n        velocity: scrollEndVelocity.value\n      }, function () {\n        var _f = function _f(isFinished) {\n          return onFinish(isFinished);\n        };\n        _f._closure = {\n          onFinish: onFinish\n        };\n        _f.asString = \"function _f(isFinished){const{onFinish}=jsThis._closure;{return onFinish(isFinished);}}\";\n        _f.__workletHash = 12004837605207;\n        _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (158:6)\";\n        return _f;\n      }());\n    };\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      withDecay: _reactNativeReanimated.withDecay,\n      scrollEndVelocity: scrollEndVelocity,\n      onFinish: onFinish\n    };\n    _f.asString = \"function _f(){const{touching,translation,withDecay,scrollEndVelocity,onFinish}=jsThis._closure;{touching.value=true;translation.value=withDecay({velocity:scrollEndVelocity.value},function(isFinished){return onFinish(isFinished);});}}\";\n    _f.__workletHash = 1701548878343;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (153:40)\";\n    return _f;\n  }(), [onFinish, scrollEndVelocity.value, touching, translation]);\n  var resetBoundary = _react.default.useCallback(function () {\n    var _f = function _f() {\n      if (touching.value) return;\n      if (translation.value > 0) {\n        if (scrollEndTranslation.value < 0) {\n          activeDecay();\n          return;\n        }\n        if (!infinite) {\n          translation.value = _withSpring(0);\n          return;\n        }\n      }\n      if (translation.value < -((maxPage - 1) * size)) {\n        if (scrollEndTranslation.value > 0) {\n          activeDecay();\n          return;\n        }\n        if (!infinite) translation.value = _withSpring(-((maxPage - 1) * size));\n      }\n    };\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      scrollEndTranslation: scrollEndTranslation,\n      activeDecay: activeDecay,\n      infinite: infinite,\n      _withSpring: _withSpring,\n      maxPage: maxPage,\n      size: size\n    };\n    _f.asString = \"function _f(){const{touching,translation,scrollEndTranslation,activeDecay,infinite,_withSpring,maxPage,size}=jsThis._closure;{if(touching.value)return;if(translation.value>0){if(scrollEndTranslation.value<0){activeDecay();return;}if(!infinite){translation.value=_withSpring(0);return;}}if(translation.value<-((maxPage-1)*size)){if(scrollEndTranslation.value>0){activeDecay();return;}if(!infinite)translation.value=_withSpring(-((maxPage-1)*size));}}}\";\n    _f.__workletHash = 17032900471906;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (162:42)\";\n    return _f;\n  }(), [touching.value, translation, maxPage, size, scrollEndTranslation.value, infinite, activeDecay, _withSpring]);\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return translation.value;\n    };\n    _f._closure = {\n      translation: translation\n    };\n    _f.asString = \"function _f(){const{translation}=jsThis._closure;{return translation.value;}}\";\n    _f.__workletHash = 9829368032147;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (198:4)\";\n    return _f;\n  }(), function () {\n    var _f = function _f() {\n      if (!pagingEnabled) resetBoundary();\n    };\n    _f._closure = {\n      pagingEnabled: pagingEnabled,\n      resetBoundary: resetBoundary\n    };\n    _f.asString = \"function _f(){const{pagingEnabled,resetBoundary}=jsThis._closure;{if(!pagingEnabled)resetBoundary();}}\";\n    _f.__workletHash = 3586615076030;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (199:4)\";\n    return _f;\n  }(), [pagingEnabled, resetBoundary]);\n  var panGestureEventHandler = (0, _reactNativeReanimated.useAnimatedGestureHandler)({\n    onStart: function () {\n      var _f = function _f(_, ctx) {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && (0, _reactNativeReanimated.runOnJS)(onScrollBegin)();\n        ctx.max = (maxPage - 1) * size;\n        ctx.panOffset = translation.value;\n      };\n      _f._closure = {\n        touching: touching,\n        onScrollBegin: onScrollBegin,\n        runOnJS: _reactNativeReanimated.runOnJS,\n        maxPage: maxPage,\n        size: size,\n        translation: translation\n      };\n      _f.asString = \"function _f(_,ctx){const{touching,onScrollBegin,runOnJS,maxPage,size,translation}=jsThis._closure;{touching.value=true;ctx.validStart=true;onScrollBegin&&runOnJS(onScrollBegin)();ctx.max=(maxPage-1)*size;ctx.panOffset=translation.value;}}\";\n      _f.__workletHash = 1789833551681;\n      _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (211:15)\";\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(e, ctx) {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          (0, _reactNativeReanimated.cancelAnimation)(translation);\n        }\n        touching.value = true;\n        var translationX = e.translationX,\n          translationY = e.translationY;\n        var panTranslation = isHorizontal.value ? translationX : translationY;\n        if (!infinite && (translation.value > 0 || translation.value < -ctx.max)) {\n          var boundary = translation.value > 0 ? 0 : -ctx.max;\n          var fixed = boundary - ctx.panOffset;\n          var dynamic = panTranslation - fixed;\n          translation.value = boundary + dynamic * 0.5;\n          return;\n        }\n        translation.value = ctx.panOffset + panTranslation;\n      };\n      _f._closure = {\n        cancelAnimation: _reactNativeReanimated.cancelAnimation,\n        translation: translation,\n        touching: touching,\n        isHorizontal: isHorizontal,\n        infinite: infinite\n      };\n      _f.asString = \"function _f(e,ctx){const{cancelAnimation,translation,touching,isHorizontal,infinite}=jsThis._closure;{if(ctx.validStart){ctx.validStart=false;cancelAnimation(translation);}touching.value=true;const{translationX:translationX,translationY:translationY}=e;const panTranslation=isHorizontal.value?translationX:translationY;if(!infinite&&(translation.value>0||translation.value<-ctx.max)){const boundary=translation.value>0?0:-ctx.max;const fixed=boundary-ctx.panOffset;const dynamic=panTranslation-fixed;translation.value=boundary+dynamic*0.5;return;}translation.value=ctx.panOffset+panTranslation;}}\";\n      _f.__workletHash = 11738845597539;\n      _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (218:16)\";\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(e) {\n        var velocityX = e.velocityX,\n          velocityY = e.velocityY,\n          translationX = e.translationX,\n          translationY = e.translationY;\n        scrollEndVelocity.value = isHorizontal.value ? velocityX : velocityY;\n        scrollEndTranslation.value = isHorizontal.value ? translationX : translationY;\n        endWithSpring(onScrollEnd);\n        if (!infinite) touching.value = false;\n      };\n      _f._closure = {\n        scrollEndVelocity: scrollEndVelocity,\n        isHorizontal: isHorizontal,\n        scrollEndTranslation: scrollEndTranslation,\n        endWithSpring: endWithSpring,\n        onScrollEnd: onScrollEnd,\n        infinite: infinite,\n        touching: touching\n      };\n      _f.asString = \"function _f(e){const{scrollEndVelocity,isHorizontal,scrollEndTranslation,endWithSpring,onScrollEnd,infinite,touching}=jsThis._closure;{const{velocityX:velocityX,velocityY:velocityY,translationX:translationX,translationY:translationY}=e;scrollEndVelocity.value=isHorizontal.value?velocityX:velocityY;scrollEndTranslation.value=isHorizontal.value?translationX:translationY;endWithSpring(onScrollEnd);if(!infinite)touching.value=false;}}\";\n      _f.__workletHash = 10638018947905;\n      _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (242:13)\";\n      return _f;\n    }()\n  }, [pagingEnabled, isHorizontal.value, infinite, maxPage, size, snapEnabled, onScrollBegin, onScrollEnd]);\n  return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, panGestureHandlerProps, {\n    enabled: enabled,\n    onGestureEvent: panGestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNativeReanimated.default.View, {\n    testID: testID,\n    style: style,\n    onTouchStart: onTouchBegin,\n    onTouchEnd: onTouchEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nvar ScrollViewGesture = IScrollViewGesture;\nexports.ScrollViewGesture = ScrollViewGesture;","map":{"version":3,"mappings":"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","names":["IScrollViewGesture","props","React","useContext","CTX","_React$useContext$pro","vertical","pagingEnabled","snapEnabled","panGestureHandlerProps","infinite","loop","scrollAnimationDuration","withAnimation","enabled","dataLength","size","translation","testID","_props$style","style","onScrollBegin","onScrollEnd","onTouchBegin","onTouchEnd","maxPage","isHorizontal","_f","touching","scrollEndTranslation","scrollEndVelocity","_withSpring","useCallback","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","Easing","easeOutQuart","isFinished","runOnJS","dealWithAnimation","endWithSpring","origin","value","velocity","nextPage","Math","round","deceleration","direction","computed","ceil","floor","page","finalPage","min","max","withDecay","onFinish","activeDecay","resetBoundary","panGestureEventHandler","onStart","_","ctx","validStart","panOffset","onActive","e","translationX","translationY","panTranslation","boundary","fixed","dynamic","cancelAnimation","onEnd","velocityX","velocityY","_react","_reactNativeGestureHandler","onGestureEvent","__self","__source","fileName","lineNumber","columnNumber","_reactNativeReanimated","View","onTouchStart","children","ScrollViewGesture"],"sources":["ScrollViewGesture.tsx"],"sourcesContent":["import React from \"react\";\nimport type { StyleProp, ViewStyle } from \"react-native\";\nimport type { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\nimport {\n  PanGestureHandler,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"./constants\";\nimport { CTX } from \"./store\";\nimport type { WithTimingAnimation } from \"./types\";\nimport { dealWithAnimation } from \"./utils/dealWithAnimation\";\n\ninterface GestureContext extends Record<string, unknown> {\n  validStart: boolean\n  panOffset: number\n  max: number\n}\n\ninterface Props {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n  const {\n    props: {\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      panGestureHandlerProps,\n      loop: infinite,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollBegin,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const touching = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n\n  const _withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (onFinished?: () => void) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocity.value;\n      if (!pagingEnabled) {\n        /**\n                 * If enabled, releasing the touch will scroll to the nearest item.\n                 * valid when pagingEnabled=false\n                 */\n        if (snapEnabled) {\n          const nextPage\n                        = Math.round((origin + velocity * 0.4) / size) * size;\n\n          translation.value = _withSpring(nextPage, onFinished);\n          return;\n        }\n        translation.value = withDecay({\n          velocity,\n          deceleration: 0.999,\n        });\n        return;\n      }\n\n      const direction = -(scrollEndTranslation.value >= 0 ? 1 : -1);\n      const computed = direction < 0 ? Math.ceil : Math.floor;\n      const page = computed(-translation.value / size);\n      let finalPage = page + direction;\n\n      if (!infinite)\n        finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n\n      translation.value = _withSpring(-finalPage * size, onFinished);\n    },\n    [\n      translation,\n      scrollEndVelocity.value,\n      pagingEnabled,\n      size,\n      scrollEndTranslation.value,\n      infinite,\n      _withSpring,\n      snapEnabled,\n      maxPage,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite) {\n        translation.value = _withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite)\n        translation.value = _withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    infinite,\n    activeDecay,\n    _withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  const panGestureEventHandler = useAnimatedGestureHandler<\n  PanGestureHandlerGestureEvent,\n  GestureContext\n  >(\n    {\n      onStart: (_, ctx) => {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && runOnJS(onScrollBegin)();\n        ctx.max = (maxPage - 1) * size;\n        ctx.panOffset = translation.value;\n      },\n      onActive: (e, ctx) => {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          cancelAnimation(translation);\n        }\n        touching.value = true;\n        const { translationX, translationY } = e;\n        const panTranslation = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        if (\n          !infinite\n                    && (translation.value > 0 || translation.value < -ctx.max)\n        ) {\n          const boundary = translation.value > 0 ? 0 : -ctx.max;\n          const fixed = boundary - ctx.panOffset;\n          const dynamic = panTranslation - fixed;\n          translation.value = boundary + dynamic * 0.5;\n          return;\n        }\n\n        translation.value = ctx.panOffset + panTranslation;\n      },\n      onEnd: (e) => {\n        const { velocityX, velocityY, translationX, translationY } = e;\n        scrollEndVelocity.value = isHorizontal.value\n          ? velocityX\n          : velocityY;\n        scrollEndTranslation.value = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        endWithSpring(onScrollEnd);\n\n        if (!infinite)\n          touching.value = false;\n      },\n    },\n    [\n      pagingEnabled,\n      isHorizontal.value,\n      infinite,\n      maxPage,\n      size,\n      snapEnabled,\n      onScrollBegin,\n      onScrollEnd,\n    ],\n  );\n\n  return (\n    <PanGestureHandler\n      {...panGestureHandlerProps}\n      enabled={enabled}\n      onGestureEvent={panGestureEventHandler}\n    >\n      <Animated.View\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n      >\n        {props.children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"]},"metadata":{},"sourceType":"script"}