{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseLayout = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\nvar _useCheckMounted = require(\"../hooks/useCheckMounted\");\nvar _useOffsetX = require(\"../hooks/useOffsetX\");\nvar _LazyView = require(\"../LazyView\");\nvar _store = require(\"../store\");\nvar _this = this,\n  _jsxFileName = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx\";\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar BaseLayout = function BaseLayout(props) {\n  var mounted = (0, _useCheckMounted.useCheckMounted)();\n  var handlerOffset = props.handlerOffset,\n    index = props.index,\n    children = props.children,\n    visibleRanges = props.visibleRanges,\n    animationStyle = props.animationStyle;\n  var context = _react.default.useContext(_store.CTX);\n  var _context$props = context.props,\n    loop = _context$props.loop,\n    dataLength = _context$props.dataLength,\n    width = _context$props.width,\n    height = _context$props.height,\n    vertical = _context$props.vertical,\n    customConfig = _context$props.customConfig,\n    mode = _context$props.mode,\n    modeConfig = _context$props.modeConfig;\n  var size = vertical ? height : width;\n  var _React$useState = _react.default.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    shouldUpdate = _React$useState2[0],\n    setShouldUpdate = _React$useState2[1];\n  var offsetXConfig = _objectSpread({\n    handlerOffset: handlerOffset,\n    index: index,\n    size: size,\n    dataLength: dataLength,\n    loop: loop\n  }, typeof customConfig === \"function\" ? customConfig() : {});\n  if (mode === \"horizontal-stack\") {\n    var _ref = modeConfig,\n      snapDirection = _ref.snapDirection,\n      showLength = _ref.showLength;\n    offsetXConfig = {\n      handlerOffset: handlerOffset,\n      index: index,\n      size: size,\n      dataLength: dataLength,\n      loop: loop,\n      type: snapDirection === \"right\" ? \"negative\" : \"positive\",\n      viewCount: showLength\n    };\n  }\n  var x = (0, _useOffsetX.useOffsetX)(offsetXConfig, visibleRanges);\n  var animationValue = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      return x.value / size;\n    };\n    _f._closure = {\n      x: x,\n      size: size\n    };\n    _f.asString = \"function _f(){const{x,size}=jsThis._closure;{return x.value/size;}}\";\n    _f.__workletHash = 9077192607952;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (74:41)\";\n    return _f;\n  }(), [x, size]);\n  var animatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    var _f = function _f() {\n      return animationStyle(x.value / size);\n    };\n    _f._closure = {\n      animationStyle: animationStyle,\n      x: x,\n      size: size\n    };\n    _f.asString = \"function _f(){const{animationStyle,x,size}=jsThis._closure;{return animationStyle(x.value/size);}}\";\n    _f.__workletHash = 3916054905053;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (76:4)\";\n    _f.__optimalization = 2;\n    return _f;\n  }(), [animationStyle]);\n  var updateView = _react.default.useCallback(function (negativeRange, positiveRange) {\n    mounted.current && setShouldUpdate(index >= negativeRange[0] && index <= negativeRange[1] || index >= positiveRange[0] && index <= positiveRange[1]);\n  }, [index, mounted]);\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return visibleRanges.value;\n    };\n    _f._closure = {\n      visibleRanges: visibleRanges\n    };\n    _f.asString = \"function _f(){const{visibleRanges}=jsThis._closure;{return visibleRanges.value;}}\";\n    _f.__workletHash = 15231519758579;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (92:4)\";\n    return _f;\n  }(), function () {\n    var _f = function _f() {\n      (0, _reactNativeReanimated.runOnJS)(updateView)(visibleRanges.value.negativeRange, visibleRanges.value.positiveRange);\n    };\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      updateView: updateView,\n      visibleRanges: visibleRanges\n    };\n    _f.asString = \"function _f(){const{runOnJS,updateView,visibleRanges}=jsThis._closure;{runOnJS(updateView)(visibleRanges.value.negativeRange,visibleRanges.value.positiveRange);}}\";\n    _f.__workletHash = 6352504350554;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (93:4)\";\n    return _f;\n  }(), [visibleRanges.value]);\n  return _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [{\n      width: width || \"100%\",\n      height: height || \"100%\",\n      position: \"absolute\"\n    }, animatedStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_LazyView.LazyView, {\n    shouldUpdate: shouldUpdate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, children({\n    animationValue: animationValue\n  })));\n};\nexports.BaseLayout = BaseLayout;","map":{"version":3,"mappings":";;;;;;;AAAA;AAGA;AASA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,IAAMA,UAQX,GAAG,SARQA,UAQR,CAACC,KAAD,EAAW;EACd,IAAMC,OAAO,GAAG,uCAAhB;EACA,IAAQC,aAAR,GACQF,KADR,CAAQE,aAAR;IAAuBC,KAAvB,GACQH,KADR,CAAuBG,KAAvB;IAA8BC,QAA9B,GACQJ,KADR,CAA8BI,QAA9B;IAAwCC,aAAxC,GACQL,KADR,CAAwCK,aAAxC;IAAuDC,cAAvD,GACQN,KADR,CAAuDM,cAAvD;EAGA,IAAMC,OAAO,GAAGC,eAAMC,UAAN,CAAiBC,UAAjB,CAAhB;EACA,qBAWIH,OAXJ,CACEP,KADF;IAEIW,IAFJ,kBAEIA,IAFJ;IAGIC,UAHJ,kBAGIA,UAHJ;IAIIC,KAJJ,kBAIIA,KAJJ;IAKIC,MALJ,kBAKIA,MALJ;IAMIC,QANJ,kBAMIA,QANJ;IAOIC,YAPJ,kBAOIA,YAPJ;IAQIC,IARJ,kBAQIA,IARJ;IASIC,UATJ,kBASIA,UATJ;EAYA,IAAMC,IAAI,GAAGJ,QAAQ,GAAGD,MAAH,GAAYD,KAAjC;EACA,sBAAwCL,eAAMY,QAAN,CAAe,KAAf,CAAxC;IAAAC;IAAOC,YAAP;IAAqBC,eAArB;EACA,IAAIC,aAAoB;IACtBtB,aAAa,EAAbA,aADsB;IAEtBC,KAAK,EAALA,KAFsB;IAGtBgB,IAAI,EAAJA,IAHsB;IAItBP,UAAU,EAAVA,UAJsB;IAKtBD,IAAI,EAAJA;EALsB,GAMlB,OAAOK,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,EAAjD,GAAsD,EANpC,CAAxB;EASA,IAAIC,IAAI,KAAK,kBAAb,EAAiC;IAC/B,WAAsCC,UAAtC;MAAQO,aAAR,QAAQA,aAAR;MAAuBC,UAAvB,QAAuBA,UAAvB;IAEAF,aAAa,GAAG;MACdtB,aAAa,EAAbA,aADc;MAEdC,KAAK,EAALA,KAFc;MAGdgB,IAAI,EAAJA,IAHc;MAIdP,UAAU,EAAVA,UAJc;MAKdD,IAAI,EAAJA,IALc;MAMdgB,IAAI,EAAEF,aAAa,KAAK,OAAlB,GAA4B,UAA5B,GAAyC,UANjC;MAOdG,SAAS,EAAEF;IAPG,CAAhB;EASD;EAED,IAAMG,CAAC,GAAG,4BAAWL,aAAX,EAA0BnB,aAA1B,CAAV;EACA,IAAMyB,cAAc,GAAG;IAAA,SAAgB;MAAA,OAAMD,CAAC,CAACE,KAAF,GAAUZ,IAAhB;IAAA,CAAhB;IAAAa;MAAAH,GAxElBA,CAwEkB;MAAAV,MAxERA;IAwEQ;IAAAa;IAAAA;IAAAA;IAAA;EAAA,KAAsC,CAACH,CAAD,EAAIV,IAAJ,CAAtC,CAAvB;EACA,IAAMc,aAAa,GAAG;IAAA,SACpB;MAAA,OAAM3B,cAAc,CAACuB,CAAC,CAACE,KAAF,GAAUZ,IAAX,CAApB;IAAA,CADoB;IAAAa;MAAA1B,gBAzEjBA,cAyEiB;MAAAuB,GAzEFA,CAyEE;MAAAV,MAzEQA;IAyER;IAAAa;IAAAA;IAAAA;IAAAA;IAAA;EAAA,KAEpB,CAAC1B,cAAD,CAFoB,CAAtB;EAKA,IAAM4B,UAAU,GAAG1B,eAAM2B,WAAN,CACjB,UAACC,aAAD,EAA0BC,aAA1B,EAAsD;IACpDpC,OAAO,CAACqC,OAAR,IACaf,eAAe,CACfpB,KAAK,IAAIiC,aAAa,CAAC,CAAD,CAAtB,IAA6BjC,KAAK,IAAIiC,aAAa,CAAC,CAAD,CAApD,IACUjC,KAAK,IAAIkC,aAAa,CAAC,CAAD,CAAtB,IAA6BlC,KAAK,IAAIkC,aAAa,CAAC,CAAD,CAF7C,CAD5B;EAKD,CAPgB,EAQjB,CAAClC,KAAD,EAAQF,OAAR,CARiB,CAAnB;EAWA;IAAA,SACE;MAAA,OAAMI,aAAa,CAAC0B,KAApB;IAAA,CADF;IAAAC;MAAA3B,eAzFKA;IAyFL;IAAA2B;IAAAA;IAAAA;IAAA;EAAA;IAAA,uBAEQ;MACJ,oCAAQE,UAAR,EACE7B,aAAa,CAAC0B,KAAd,CAAoBK,aADtB,EAEE/B,aAAa,CAAC0B,KAAd,CAAoBM,aAFtB;IAID,CAPH;IAAAL;MAAAO,SAxFAA,8BAwFA;MAAAL,YAxFQA,UAwFR;MAAA7B,eAxFuDA;IAwFvD;IAAA2B;IAAAA;IAAAA;IAAA;EAAA,KAQE,CAAC3B,aAAa,CAAC0B,KAAf,CARF;EAWA,OACES,6BAACC,8BAAD,CAAUC,IAAV;IACEC,KAAK,EAAE,CACL;MACE9B,KAAK,EAAEA,KAAK,IAAI,MADlB;MAEEC,MAAM,EAAEA,MAAM,IAAI,MAFpB;MAGE8B,QAAQ,EAAE;IAHZ,CADK,EAMLX,aANK,CADT;IAAAY;IAAAC;MAAAC;MAAAC;MAAAC;IAAA;EAAA,GAUET,6BAACU,kBAAD;IAAU5B,YAAY,EAAEA,YAAxB;IAAAuB;IAAAC;MAAAC;MAAAC;MAAAC;IAAA;EAAA,GACG7C,QAAQ,CAAC;IAAE0B,cAAc,EAAdA;EAAF,CAAD,CADX,CAVF,CADF;AAgBD,CAhGM","names":["BaseLayout","props","mounted","handlerOffset","index","children","visibleRanges","animationStyle","context","React","useContext","CTX","loop","dataLength","width","height","vertical","customConfig","mode","modeConfig","size","useState","_React$useState2","shouldUpdate","setShouldUpdate","offsetXConfig","snapDirection","showLength","type","viewCount","x","animationValue","value","_f","animatedStyle","updateView","useCallback","negativeRange","positiveRange","current","runOnJS","_react","_reactNativeReanimated","View","style","position","__self","__source","fileName","lineNumber","columnNumber","_LazyView"],"sources":["BaseLayout.tsx"],"sourcesContent":["import React from \"react\";\nimport type { ViewStyle } from \"react-native\";\nimport type { AnimatedStyleProp } from \"react-native-reanimated\";\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useDerivedValue,\n} from \"react-native-reanimated\";\n\nimport type { ILayoutConfig } from \"./stack\";\n\nimport { useCheckMounted } from \"../hooks/useCheckMounted\";\nimport type { IOpts } from \"../hooks/useOffsetX\";\nimport { useOffsetX } from \"../hooks/useOffsetX\";\nimport type { IVisibleRanges } from \"../hooks/useVisibleRanges\";\nimport { LazyView } from \"../LazyView\";\nimport { CTX } from \"../store\";\n\nexport type TAnimationStyle = (value: number) => AnimatedStyleProp<ViewStyle>;\n\nexport const BaseLayout: React.FC<{\n  index: number\n  handlerOffset: Animated.SharedValue<number>\n  visibleRanges: IVisibleRanges\n  animationStyle: TAnimationStyle\n  children: (ctx: {\n    animationValue: Animated.SharedValue<number>\n  }) => React.ReactElement\n}> = (props) => {\n  const mounted = useCheckMounted();\n  const { handlerOffset, index, children, visibleRanges, animationStyle }\n        = props;\n\n  const context = React.useContext(CTX);\n  const {\n    props: {\n      loop,\n      dataLength,\n      width,\n      height,\n      vertical,\n      customConfig,\n      mode,\n      modeConfig,\n    },\n  } = context;\n  const size = vertical ? height : width;\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  let offsetXConfig: IOpts = {\n    handlerOffset,\n    index,\n    size,\n    dataLength,\n    loop,\n    ...(typeof customConfig === \"function\" ? customConfig() : {}),\n  };\n\n  if (mode === \"horizontal-stack\") {\n    const { snapDirection, showLength } = modeConfig as ILayoutConfig;\n\n    offsetXConfig = {\n      handlerOffset,\n      index,\n      size,\n      dataLength,\n      loop,\n      type: snapDirection === \"right\" ? \"negative\" : \"positive\",\n      viewCount: showLength,\n    };\n  }\n\n  const x = useOffsetX(offsetXConfig, visibleRanges);\n  const animationValue = useDerivedValue(() => x.value / size, [x, size]);\n  const animatedStyle = useAnimatedStyle(\n    () => animationStyle(x.value / size),\n    [animationStyle],\n  );\n\n  const updateView = React.useCallback(\n    (negativeRange: number[], positiveRange: number[]) => {\n      mounted.current\n                && setShouldUpdate(\n                  (index >= negativeRange[0] && index <= negativeRange[1])\n                        || (index >= positiveRange[0] && index <= positiveRange[1]),\n                );\n    },\n    [index, mounted],\n  );\n\n  useAnimatedReaction(\n    () => visibleRanges.value,\n    () => {\n      runOnJS(updateView)(\n        visibleRanges.value.negativeRange,\n        visibleRanges.value.positiveRange,\n      );\n    },\n    [visibleRanges.value],\n  );\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: width || \"100%\",\n          height: height || \"100%\",\n          position: \"absolute\",\n        },\n        animatedStyle,\n      ]}\n    >\n      <LazyView shouldUpdate={shouldUpdate}>\n        {children({ animationValue })}\n      </LazyView>\n    </Animated.View>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}