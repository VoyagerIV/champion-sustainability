{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useCallback, useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Flex } from '@react-native-material/core';\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  modal: {\n    backgroundColor: 'grey',\n    flex: 1,\n    alignContent: 'center',\n    marginTop: \"50%\",\n    maxHeight: \"50%\",\n    borderRadius: 50\n  },\n  innerView: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    padding: \"20%\"\n  }\n});\nvar MyModal = function MyModal(_ref) {\n  var txt = _ref.txt;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: {\n        height: 100\n      }\n    }), _jsx(Button, {\n      title: \"Show modal\",\n      onPress: toggleModal\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Modal, {\n        isVisible: isModalVisible,\n        hasBackdrop: false,\n        style: styles.modal,\n        children: _jsxs(View, {\n          style: styles.innerView,\n          children: [_jsx(View, {\n            children: _jsx(Text, {\n              children: txt\n            })\n          }), _jsx(Button, {\n            title: \"Hide modal\",\n            onPress: toggleModal\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default MyModal;","map":{"version":3,"names":["React","useCallback","useState","useEffect","Flex","Modal","styles","StyleSheet","create","modal","backgroundColor","flex","alignContent","marginTop","maxHeight","borderRadius","innerView","justifyContent","padding","MyModal","txt","isModalVisible","setModalVisible","toggleModal","height"],"sources":["/home/mohammad/Documents/GitHub/champion-sustainability/components/Modal.jsx"],"sourcesContent":["import {React, useCallback, useState, useEffect} from 'react';\nimport { Button, TextInput, View, StyleSheet, TouchableHighlight, Text} from 'react-native';\nimport { Flex } from '@react-native-material/core';\nimport Modal from \"react-native-modal\";\n\nconst styles = StyleSheet.create({\n    modal :{\n    backgroundColor: 'grey', \n    flex:1,\n    alignContent: 'center',\n    marginTop: \"50%\",\n    maxHeight: \"50%\",\n    borderRadius: 50\n    },\n    innerView: { \n    flex: 1, \n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    padding: \"20%\"\n    }\n})\n\n\n\nconst MyModal = ({txt}) => {\n\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n  // Remove the top view style if you want\n\n\n  return (\n    <>\n    <View style={{height: 100}}></View> \n    <Button title=\"Show modal\" onPress={toggleModal} />\n    <View style={{ flex: 1}}>\n\n      <Modal isVisible={isModalVisible} hasBackdrop={false} style={styles.modal}>\n        <View style={styles.innerView}>\n          <View>\n          <Text>{txt}</Text>\n          </View>\n          <Button title=\"Hide modal\" onPress={toggleModal} />\n        </View>\n      </Modal>\n    </View>\n    </>\n  );\n}\n\nexport default MyModal;\n"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE9D,SAASC,IAAI,QAAQ,6BAA6B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAAA;AAEvC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC7BC,KAAK,EAAE;IACPC,eAAe,EAAE,MAAM;IACvBC,IAAI,EAAC,CAAC;IACNC,YAAY,EAAE,QAAQ;IACtBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACXL,IAAI,EAAE,CAAC;IACPM,cAAc,EAAE,eAAe;IAC/BF,YAAY,EAAE,EAAE;IAChBG,OAAO,EAAE;EACT;AACJ,CAAC,CAAC;AAIF,IAAMC,OAAO,GAAG,SAAVA,OAAO,OAAc;EAAA,IAATC,GAAG,QAAHA,GAAG;EAEnB,gBAA0ClB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlDmB,cAAc;IAAEC,eAAe;EAEtC,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IACxBD,eAAe,CAAC,CAACD,cAAc,CAAC;EAClC,CAAC;;EAKD,OACE;IAAA,WACA,KAAC,IAAI;MAAC,KAAK,EAAE;QAACG,MAAM,EAAE;MAAG;IAAE,EAAQ,EACnC,KAAC,MAAM;MAAC,KAAK,EAAC,YAAY;MAAC,OAAO,EAAED;IAAY,EAAG,EACnD,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEZ,IAAI,EAAE;MAAC,CAAE;MAAA,UAEtB,KAAC,KAAK;QAAC,SAAS,EAAEU,cAAe;QAAC,WAAW,EAAE,KAAM;QAAC,KAAK,EAAEf,MAAM,CAACG,KAAM;QAAA,UACxE,MAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACU,SAAU;UAAA,WAC5B,KAAC,IAAI;YAAA,UACL,KAAC,IAAI;cAAA,UAAEI;YAAG;UAAQ,EACX,EACP,KAAC,MAAM;YAAC,KAAK,EAAC,YAAY;YAAC,OAAO,EAAEG;UAAY,EAAG;QAAA;MAC9C;IACD,EACH;EAAA,EACJ;AAEP,CAAC;AAED,eAAeJ,OAAO"},"metadata":{},"sourceType":"module"}