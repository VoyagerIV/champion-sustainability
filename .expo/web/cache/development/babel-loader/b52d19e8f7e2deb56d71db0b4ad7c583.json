{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCarouselController = useCarouselController;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\nvar _constants = require(\"../constants\");\nvar _computedWithAutoFillData = require(\"../utils/computedWithAutoFillData\");\nvar _dealWithAnimation = require(\"../utils/dealWithAnimation\");\nvar _handlerOffsetDirection = require(\"../utils/handlerOffsetDirection\");\nvar _log = require(\"../utils/log\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction useCarouselController(options) {\n  var size = options.size,\n    loop = options.loop,\n    dataLength = options.dataLength,\n    handlerOffset = options.handlerOffset,\n    withAnimation = options.withAnimation,\n    _options$defaultIndex = options.defaultIndex,\n    defaultIndex = _options$defaultIndex === void 0 ? 0 : _options$defaultIndex,\n    duration = options.duration,\n    autoFillData = options.autoFillData;\n  var dataInfo = _react.default.useMemo(function () {\n    return {\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength\n    };\n  }, [dataLength]);\n  var index = (0, _reactNativeReanimated.useSharedValue)(defaultIndex);\n  var sharedIndex = (0, _react.useRef)(defaultIndex);\n  var sharedPreIndex = (0, _react.useRef)(defaultIndex);\n  var currentFixedPage = _react.default.useCallback(function () {\n    if (loop) return -Math.round(handlerOffset.value / size);\n    var fixed = handlerOffset.value / size % dataInfo.length;\n    return Math.round(handlerOffset.value <= 0 ? Math.abs(fixed) : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0));\n  }, [handlerOffset, dataInfo, size, loop]);\n  function setSharedIndex(newSharedIndex) {\n    sharedIndex.current = newSharedIndex;\n  }\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      var handlerOffsetValue = handlerOffset.value;\n      var toInt = (0, _log.round)(handlerOffsetValue / size) % dataInfo.length;\n      var isPositive = handlerOffsetValue <= 0;\n      var i = isPositive ? Math.abs(toInt) : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n      var newSharedIndexValue = (0, _computedWithAutoFillData.convertToSharedIndex)({\n        loop: loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData,\n        index: i\n      });\n      return {\n        i: i,\n        newSharedIndexValue: newSharedIndexValue\n      };\n    };\n    _f._closure = {\n      handlerOffset: handlerOffset,\n      round: _log.round,\n      size: size,\n      dataInfo: dataInfo,\n      convertToSharedIndex: _computedWithAutoFillData.convertToSharedIndex,\n      loop: loop,\n      autoFillData: autoFillData\n    };\n    _f.asString = \"function _f(){const{handlerOffset,round,size,dataInfo,convertToSharedIndex,loop,autoFillData}=jsThis._closure;{const handlerOffsetValue=handlerOffset.value;const toInt=round(handlerOffsetValue/size)%dataInfo.length;const isPositive=handlerOffsetValue<=0;const i=isPositive?Math.abs(toInt):Math.abs(toInt>0?dataInfo.length-toInt:0);const newSharedIndexValue=convertToSharedIndex({loop:loop,rawDataLength:dataInfo.originalLength,autoFillData:autoFillData,index:i});return{i:i,newSharedIndexValue:newSharedIndexValue};}}\";\n    _f.__workletHash = 442719064151;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (84:4)\";\n    return _f;\n  }(), function () {\n    var _f = function _f(_ref) {\n      var i = _ref.i,\n        newSharedIndexValue = _ref.newSharedIndexValue;\n      index.value = i;\n      (0, _reactNativeReanimated.runOnJS)(setSharedIndex)(newSharedIndexValue);\n    };\n    _f._closure = {\n      index: index,\n      runOnJS: _reactNativeReanimated.runOnJS,\n      setSharedIndex: setSharedIndex\n    };\n    _f.asString = \"function _f({i:i,newSharedIndexValue:newSharedIndexValue}){const{index,runOnJS,setSharedIndex}=jsThis._closure;{index.value=i;runOnJS(setSharedIndex)(newSharedIndexValue);}}\";\n    _f.__workletHash = 16638491076412;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (104:4)\";\n    return _f;\n  }(), [sharedPreIndex, sharedIndex, size, dataInfo, index, loop, autoFillData, handlerOffset]);\n  var getCurrentIndex = _react.default.useCallback(function () {\n    var realIndex = (0, _computedWithAutoFillData.computedRealIndexWithAutoFillData)({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop: loop,\n      autoFillData: autoFillData\n    });\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n  var canSliding = _react.default.useCallback(function () {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n  var onScrollEnd = _react.default.useCallback(function () {\n    options.onScrollEnd == null ? void 0 : options.onScrollEnd();\n  }, [options]);\n  var onScrollBegin = _react.default.useCallback(function () {\n    options.onScrollBegin == null ? void 0 : options.onScrollBegin();\n  }, [options]);\n  var scrollWithTiming = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var callback = function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) {\n            (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n            onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n          }\n        };\n        _f._closure = {\n          runOnJS: _reactNativeReanimated.runOnJS,\n          onScrollEnd: onScrollEnd,\n          onFinished: onFinished\n        };\n        _f.asString = \"function _f(isFinished){const{runOnJS,onScrollEnd,onFinished}=jsThis._closure;{if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}}}\";\n        _f.__workletHash = 7767198641261;\n        _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (146:23)\";\n        return _f;\n      }();\n      var defaultWithAnimation = {\n        type: \"timing\",\n        config: {\n          duration: duration,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, callback);\n    };\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      onScrollEnd: onScrollEnd,\n      duration: duration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{runOnJS,onScrollEnd,duration,Easing,dealWithAnimation,withAnimation}=jsThis._closure;{var _withAnimation;const callback=function(isFinished){\\\"worklet\\\";if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}};const defaultWithAnimation={type:\\\"timing\\\",config:{duration:duration,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,callback);}}\";\n    _f.__workletHash = 12575476119920;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (144:4)\";\n    return _f;\n  }(), [duration, withAnimation, onScrollEnd]);\n  var next = _react.default.useCallback(function () {\n    var _f = function _f() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$count = opts.count,\n        count = _opts$count === void 0 ? 1 : _opts$count,\n        _opts$animated = opts.animated,\n        animated = _opts$animated === void 0 ? true : _opts$animated,\n        onFinished = opts.onFinished;\n      if (!canSliding() || !loop && index.value >= dataInfo.length - 1) return;\n      onScrollBegin == null ? void 0 : onScrollBegin();\n      var nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(-nextPage * size, onFinished);\n      } else {\n        handlerOffset.value = -nextPage * size;\n        onFinished == null ? void 0 : onFinished();\n      }\n    };\n    _f._closure = {\n      canSliding: canSliding,\n      loop: loop,\n      index: index,\n      dataInfo: dataInfo,\n      onScrollBegin: onScrollBegin,\n      currentFixedPage: currentFixedPage,\n      handlerOffset: handlerOffset,\n      scrollWithTiming: scrollWithTiming,\n      size: size\n    };\n    _f.asString = \"function _f(opts={}){const{canSliding,loop,index,dataInfo,onScrollBegin,currentFixedPage,handlerOffset,scrollWithTiming,size}=jsThis._closure;{var _onScrollBegin;const{count=1,animated=true,onFinished:onFinished}=opts;if(!canSliding()||!loop&&index.value>=dataInfo.length-1)return;(_onScrollBegin=onScrollBegin)===null||_onScrollBegin===void 0?void 0:_onScrollBegin();const nextPage=currentFixedPage()+count;index.value=nextPage;if(animated){handlerOffset.value=scrollWithTiming(-nextPage*size,onFinished);}else{handlerOffset.value=-nextPage*size;onFinished===null||onFinished===void 0?void 0:onFinished();}}}\";\n    _f.__workletHash = 10530429864168;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (168:4)\";\n    return _f;\n  }(), [canSliding, loop, index, dataInfo, onScrollBegin, handlerOffset, size, scrollWithTiming, currentFixedPage]);\n  var prev = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _opts$count2 = opts.count,\n      count = _opts$count2 === void 0 ? 1 : _opts$count2,\n      _opts$animated2 = opts.animated,\n      animated = _opts$animated2 === void 0 ? true : _opts$animated2,\n      onFinished = opts.onFinished;\n    if (!canSliding() || !loop && index.value <= 0) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var prevPage = currentFixedPage() - count;\n    index.value = prevPage;\n    if (animated) {\n      handlerOffset.value = scrollWithTiming(-prevPage * size, onFinished);\n    } else {\n      handlerOffset.value = -prevPage * size;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [canSliding, loop, index, onScrollBegin, handlerOffset, size, scrollWithTiming, currentFixedPage]);\n  var to = _react.default.useCallback(function (opts) {\n    var i = opts.i,\n      _opts$animated3 = opts.animated,\n      animated = _opts$animated3 === void 0 ? false : _opts$animated3,\n      onFinished = opts.onFinished;\n    if (i === index.value) return;\n    if (!canSliding()) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var direction = (0, _handlerOffsetDirection.handlerOffsetDirection)(handlerOffset);\n    var offset = i * size * direction;\n    var totalSize = dataInfo.length * size;\n    var isCloseToNextLoop = false;\n    if (loop) {\n      isCloseToNextLoop = Math.abs(handlerOffset.value % totalSize) / totalSize >= 0.5;\n    }\n    var finalOffset = (Math.floor(Math.abs(handlerOffset.value / totalSize)) + (isCloseToNextLoop ? 1 : 0)) * totalSize * direction + offset;\n    if (animated) {\n      index.value = i;\n      handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n    } else {\n      handlerOffset.value = finalOffset;\n      index.value = i;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [index, canSliding, onScrollBegin, handlerOffset, size, dataInfo.length, loop, scrollWithTiming]);\n  var scrollTo = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var i = opts.index,\n      count = opts.count,\n      _opts$animated4 = opts.animated,\n      animated = _opts$animated4 === void 0 ? false : _opts$animated4,\n      onFinished = opts.onFinished;\n    if (typeof i === \"number\" && i > -1) {\n      to({\n        i: i,\n        animated: animated,\n        onFinished: onFinished\n      });\n      return;\n    }\n    if (!count) return;\n    var n = Math.round(count);\n    if (n < 0) prev({\n      count: Math.abs(n),\n      animated: animated,\n      onFinished: onFinished\n    });else next({\n      count: n,\n      animated: animated,\n      onFinished: onFinished\n    });\n  }, [prev, next, to]);\n  return {\n    next: next,\n    prev: prev,\n    scrollTo: scrollTo,\n    getCurrentIndex: getCurrentIndex,\n    getSharedIndex: function getSharedIndex() {\n      return sharedIndex.current;\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["useCarouselController","options","size","loop","dataLength","handlerOffset","withAnimation","_options$defaultIndex","defaultIndex","duration","autoFillData","dataInfo","React","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","_f","convertToSharedIndex","runOnJS","getCurrentIndex","realIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","dealWithAnimation","next","opts","count","_opts$animated","animated","nextPage","prev","_opts$animated2","prevPage","to","_opts$animated3","direction","offset","totalSize","isCloseToNextLoop","finalOffset","floor","scrollTo","_opts$animated4","n","getSharedIndex"],"sources":["useCarouselController.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport type Animated from \"react-native-reanimated\";\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport type {\n  TCarouselActionOptions,\n  TCarouselProps,\n  WithTimingAnimation,\n} from \"../types\";\nimport { computedRealIndexWithAutoFillData, convertToSharedIndex } from \"../utils/computedWithAutoFillData\";\nimport { dealWithAnimation } from \"../utils/dealWithAnimation\";\nimport { handlerOffsetDirection } from \"../utils/handlerOffsetDirection\";\nimport { round } from \"../utils/log\";\n\ninterface IOpts {\n  loop: boolean\n  size: number\n  dataLength: number\n  autoFillData: TCarouselProps[\"autoFillData\"]\n  handlerOffset: Animated.SharedValue<number>\n  withAnimation?: TCarouselProps[\"withAnimation\"]\n  duration?: number\n  defaultIndex?: number\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n}\n\nexport interface ICarouselController {\n  getSharedIndex: () => number\n  prev: (opts?: TCarouselActionOptions) => void\n  next: (opts?: TCarouselActionOptions) => void\n  getCurrentIndex: () => number\n  scrollTo: (opts?: TCarouselActionOptions) => void\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n  const {\n    size,\n    loop,\n    dataLength,\n    handlerOffset,\n    withAnimation,\n    defaultIndex = 0,\n    duration,\n    autoFillData,\n  } = options;\n\n  const dataInfo = React.useMemo(\n    () => ({\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength,\n    }),\n    [dataLength],\n  );\n\n  const index = useSharedValue<number>(defaultIndex);\n  // The Index displayed to the user\n  const sharedIndex = useRef<number>(defaultIndex);\n  const sharedPreIndex = useRef<number>(defaultIndex);\n\n  const currentFixedPage = React.useCallback(() => {\n    if (loop)\n      return -Math.round(handlerOffset.value / size);\n\n    const fixed = (handlerOffset.value / size) % dataInfo.length;\n    return Math.round(\n      handlerOffset.value <= 0\n        ? Math.abs(fixed)\n        : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0),\n    );\n  }, [handlerOffset, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex: number) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  useAnimatedReaction(\n    () => {\n      const handlerOffsetValue = handlerOffset.value;\n      const toInt = round(handlerOffsetValue / size) % dataInfo.length;\n      const isPositive = handlerOffsetValue <= 0;\n      const i = isPositive\n        ? Math.abs(toInt)\n        : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n      const newSharedIndexValue = convertToSharedIndex({\n        loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData!,\n        index: i,\n      });\n\n      return {\n        i,\n        newSharedIndexValue,\n      };\n    },\n    ({ i, newSharedIndexValue }) => {\n      index.value = i;\n      runOnJS(setSharedIndex)(newSharedIndexValue);\n    },\n    [\n      sharedPreIndex,\n      sharedIndex,\n      size,\n      dataInfo,\n      index,\n      loop,\n      autoFillData,\n      handlerOffset,\n    ],\n  );\n\n  const getCurrentIndex = React.useCallback(() => {\n    const realIndex = computedRealIndexWithAutoFillData({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop,\n      autoFillData: autoFillData!,\n    });\n\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n\n  const canSliding = React.useCallback(() => {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  const onScrollEnd = React.useCallback(() => {\n    options.onScrollEnd?.();\n  }, [options]);\n\n  const onScrollBegin = React.useCallback(() => {\n    options.onScrollBegin?.();\n  }, [options]);\n\n  const scrollWithTiming = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const callback = (isFinished: boolean) => {\n        \"worklet\";\n        if (isFinished) {\n          runOnJS(onScrollEnd)();\n          onFinished && runOnJS(onFinished)();\n        }\n      };\n\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: { duration, easing: Easing.easeOutQuart },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        callback,\n      );\n    },\n    [duration, withAnimation, onScrollEnd],\n  );\n\n  const next = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      \"worklet\";\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n        return;\n\n      onScrollBegin?.();\n\n      const nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -nextPage * size,\n          onFinished,\n        ) as any;\n      }\n      else {\n        handlerOffset.value = -nextPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      dataInfo,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const prev = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value <= 0)) return;\n\n      onScrollBegin?.();\n\n      const prevPage = currentFixedPage() - count;\n      index.value = prevPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -prevPage * size,\n          onFinished,\n        );\n      }\n      else {\n        handlerOffset.value = -prevPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const to = React.useCallback(\n    (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n      const { i, animated = false, onFinished } = opts;\n      if (i === index.value) return;\n      if (!canSliding()) return;\n\n      onScrollBegin?.();\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset);\n\n      // target offset\n      const offset = i * size * direction;\n      // page width size * page count\n      const totalSize = dataInfo.length * size;\n\n      let isCloseToNextLoop = false;\n\n      if (loop) {\n        isCloseToNextLoop\n                    = Math.abs(handlerOffset.value % totalSize) / totalSize\n                    >= 0.5;\n      }\n\n      const finalOffset\n                = (Math.floor(Math.abs(handlerOffset.value / totalSize))\n                    + (isCloseToNextLoop ? 1 : 0))\n                    * totalSize\n                    * direction\n                + offset;\n\n      if (animated) {\n        index.value = i;\n        handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n      }\n      else {\n        handlerOffset.value = finalOffset;\n        index.value = i;\n        onFinished?.();\n      }\n    },\n    [\n      index,\n      canSliding,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      dataInfo.length,\n      loop,\n      scrollWithTiming,\n    ],\n  );\n\n  const scrollTo = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { index: i, count, animated = false, onFinished } = opts;\n      if (typeof i === \"number\" && i > -1) {\n        to({ i, animated, onFinished });\n        return;\n      }\n\n      if (!count)\n        return;\n\n      const n = Math.round(count);\n\n      if (n < 0)\n        prev({ count: Math.abs(n), animated, onFinished });\n\n      else\n        next({ count: n, animated, onFinished });\n    },\n    [prev, next, to],\n  );\n\n  return {\n    next,\n    prev,\n    scrollTo,\n    getCurrentIndex,\n    getSharedIndex: () => sharedIndex.current,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}