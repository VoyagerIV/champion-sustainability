{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\nvar _useAutoPlay2 = require(\"./hooks/useAutoPlay\");\nvar _useCarouselController = require(\"./hooks/useCarouselController\");\nvar _useCommonVariables = require(\"./hooks/useCommonVariables\");\nvar _useInitProps = require(\"./hooks/useInitProps\");\nvar _useLayoutConfig = require(\"./hooks/useLayoutConfig\");\nvar _useOnProgressChange = require(\"./hooks/useOnProgressChange\");\nvar _usePropsErrorBoundary = require(\"./hooks/usePropsErrorBoundary\");\nvar _useVisibleRanges = require(\"./hooks/useVisibleRanges\");\nvar _BaseLayout = require(\"./layouts/BaseLayout\");\nvar _ScrollViewGesture = require(\"./ScrollViewGesture\");\nvar _store = require(\"./store\");\nvar _computedWithAutoFillData = require(\"./utils/computedWithAutoFillData\");\nvar _this = this,\n  _jsxFileName = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/Carousel.tsx\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar Carousel = _react.default.forwardRef(function (_props, ref) {\n  var props = (0, _useInitProps.useInitProps)(_props);\n  var testID = props.testID,\n    loop = props.loop,\n    autoFillData = props.autoFillData,\n    data = props.data,\n    dataLength = props.dataLength,\n    rawData = props.rawData,\n    rawDataLength = props.rawDataLength,\n    mode = props.mode,\n    style = props.style,\n    width = props.width,\n    height = props.height,\n    vertical = props.vertical,\n    autoPlay = props.autoPlay,\n    windowSize = props.windowSize,\n    autoPlayReverse = props.autoPlayReverse,\n    autoPlayInterval = props.autoPlayInterval,\n    scrollAnimationDuration = props.scrollAnimationDuration,\n    withAnimation = props.withAnimation,\n    renderItem = props.renderItem,\n    onScrollEnd = props.onScrollEnd,\n    onSnapToItem = props.onSnapToItem,\n    _onScrollBegin = props.onScrollBegin,\n    onProgressChange = props.onProgressChange,\n    customAnimation = props.customAnimation,\n    defaultIndex = props.defaultIndex;\n  var commonVariables = (0, _useCommonVariables.useCommonVariables)(props);\n  var size = commonVariables.size,\n    handlerOffset = commonVariables.handlerOffset;\n  var offsetX = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      var totalSize = size * dataLength;\n      var x = handlerOffset.value % totalSize;\n      if (!loop) return handlerOffset.value;\n      return isNaN(x) ? 0 : x;\n    };\n    _f._closure = {\n      size: size,\n      dataLength: dataLength,\n      handlerOffset: handlerOffset,\n      loop: loop\n    };\n    _f.asString = \"function _f(){const{size,dataLength,handlerOffset,loop}=jsThis._closure;{const totalSize=size*dataLength;const x=handlerOffset.value%totalSize;if(!loop)return handlerOffset.value;return isNaN(x)?0:x;}}\";\n    _f.__workletHash = 9793733890185;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/Carousel.tsx (59:36)\";\n    return _f;\n  }(), [loop, size, dataLength]);\n  (0, _usePropsErrorBoundary.usePropsErrorBoundary)(_objectSpread(_objectSpread({}, props), {}, {\n    dataLength: dataLength\n  }));\n  (0, _useOnProgressChange.useOnProgressChange)({\n    autoFillData: autoFillData,\n    loop: loop,\n    size: size,\n    offsetX: offsetX,\n    rawDataLength: rawDataLength,\n    onProgressChange: onProgressChange\n  });\n  var carouselController = (0, _useCarouselController.useCarouselController)({\n    loop: loop,\n    size: size,\n    dataLength: dataLength,\n    autoFillData: autoFillData,\n    handlerOffset: handlerOffset,\n    withAnimation: withAnimation,\n    defaultIndex: defaultIndex,\n    onScrollEnd: function onScrollEnd() {\n      return (0, _reactNativeReanimated.runOnJS)(_onScrollEnd)();\n    },\n    onScrollBegin: function onScrollBegin() {\n      return !!_onScrollBegin && (0, _reactNativeReanimated.runOnJS)(_onScrollBegin)();\n    },\n    duration: scrollAnimationDuration\n  });\n  var next = carouselController.next,\n    prev = carouselController.prev,\n    scrollTo = carouselController.scrollTo,\n    getSharedIndex = carouselController.getSharedIndex,\n    getCurrentIndex = carouselController.getCurrentIndex;\n  var _useAutoPlay = (0, _useAutoPlay2.useAutoPlay)({\n      autoPlay: autoPlay,\n      autoPlayInterval: autoPlayInterval,\n      autoPlayReverse: autoPlayReverse,\n      carouselController: carouselController\n    }),\n    startAutoPlay = _useAutoPlay.start,\n    pauseAutoPlay = _useAutoPlay.pause;\n  var _onScrollEnd = _react.default.useCallback(function () {\n    var _sharedIndex = Math.round(getSharedIndex());\n    var realIndex = (0, _computedWithAutoFillData.computedRealIndexWithAutoFillData)({\n      index: _sharedIndex,\n      dataLength: rawDataLength,\n      loop: loop,\n      autoFillData: autoFillData\n    });\n    if (onSnapToItem) onSnapToItem(realIndex);\n    if (onScrollEnd) onScrollEnd(realIndex);\n  }, [loop, autoFillData, rawDataLength, getSharedIndex, onSnapToItem, onScrollEnd]);\n  var scrollViewGestureOnScrollBegin = _react.default.useCallback(function () {\n    pauseAutoPlay();\n    _onScrollBegin == null ? void 0 : _onScrollBegin();\n  }, [_onScrollBegin, pauseAutoPlay]);\n  var scrollViewGestureOnScrollEnd = _react.default.useCallback(function () {\n    startAutoPlay();\n    _onScrollEnd();\n  }, [_onScrollEnd, startAutoPlay]);\n  var scrollViewGestureOnTouchBegin = _react.default.useCallback(pauseAutoPlay, [pauseAutoPlay]);\n  var scrollViewGestureOnTouchEnd = _react.default.useCallback(startAutoPlay, [startAutoPlay]);\n  _react.default.useImperativeHandle(ref, function () {\n    return {\n      next: next,\n      prev: prev,\n      getCurrentIndex: getCurrentIndex,\n      scrollTo: scrollTo\n    };\n  }, [getCurrentIndex, next, prev, scrollTo]);\n  var visibleRanges = (0, _useVisibleRanges.useVisibleRanges)({\n    total: dataLength,\n    viewSize: size,\n    translation: handlerOffset,\n    windowSize: windowSize\n  });\n  var layoutConfig = (0, _useLayoutConfig.useLayoutConfig)(_objectSpread(_objectSpread({}, props), {}, {\n    size: size\n  }));\n  var renderLayout = _react.default.useCallback(function (item, i) {\n    var realIndex = (0, _computedWithAutoFillData.computedRealIndexWithAutoFillData)({\n      index: i,\n      dataLength: rawDataLength,\n      loop: loop,\n      autoFillData: autoFillData\n    });\n    return _react.default.createElement(_BaseLayout.BaseLayout, {\n      key: i,\n      index: i,\n      handlerOffset: offsetX,\n      visibleRanges: visibleRanges,\n      animationStyle: customAnimation || layoutConfig,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, function (_ref) {\n      var animationValue = _ref.animationValue;\n      return renderItem({\n        item: item,\n        index: realIndex,\n        animationValue: animationValue\n      });\n    });\n  }, [loop, rawData, offsetX, visibleRanges, autoFillData, renderItem, layoutConfig, customAnimation]);\n  return _react.default.createElement(_store.CTX.Provider, {\n    value: {\n      props: props,\n      common: commonVariables\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_ScrollViewGesture.ScrollViewGesture, {\n    key: mode,\n    size: size,\n    translation: handlerOffset,\n    style: [styles.container, {\n      width: width || \"100%\",\n      height: height || \"100%\"\n    }, style, vertical ? styles.itemsVertical : styles.itemsHorizontal],\n    testID: testID,\n    onScrollBegin: scrollViewGestureOnScrollBegin,\n    onScrollEnd: scrollViewGestureOnScrollEnd,\n    onTouchBegin: scrollViewGestureOnTouchBegin,\n    onTouchEnd: scrollViewGestureOnTouchEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, data.map(renderLayout)));\n});\nvar _default = Carousel;\nexports.default = _default;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    overflow: \"hidden\"\n  },\n  itemsHorizontal: {\n    flexDirection: \"row\"\n  },\n  itemsVertical: {\n    flexDirection: \"column\"\n  }\n});","map":{"version":3,"mappings":"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","names":["Carousel","React","forwardRef","_props","ref","props","testID","loop","autoFillData","data","dataLength","rawData","rawDataLength","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","defaultIndex","commonVariables","size","handlerOffset","offsetX","totalSize","x","value","isNaN","_f","carouselController","_onScrollEnd","duration","next","prev","scrollTo","getSharedIndex","getCurrentIndex","startAutoPlay","start","pauseAutoPlay","pause","useCallback","_sharedIndex","Math","round","realIndex","index","scrollViewGestureOnScrollBegin","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","i","_react","_BaseLayout","key","animationStyle","__self","__source","fileName","lineNumber","columnNumber","animationValue","_store","Provider","common","_ScrollViewGesture","styles","container","itemsVertical","itemsHorizontal","onTouchBegin","onTouchEnd","map","StyleSheet","create","overflow","flexDirection"],"sources":["Carousel.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { runOnJS, useDerivedValue } from \"react-native-reanimated\";\n\nimport { useAutoPlay } from \"./hooks/useAutoPlay\";\nimport { useCarouselController } from \"./hooks/useCarouselController\";\nimport { useCommonVariables } from \"./hooks/useCommonVariables\";\nimport { useInitProps } from \"./hooks/useInitProps\";\nimport { useLayoutConfig } from \"./hooks/useLayoutConfig\";\nimport { useOnProgressChange } from \"./hooks/useOnProgressChange\";\nimport { usePropsErrorBoundary } from \"./hooks/usePropsErrorBoundary\";\nimport { useVisibleRanges } from \"./hooks/useVisibleRanges\";\nimport { BaseLayout } from \"./layouts/BaseLayout\";\nimport { ScrollViewGesture } from \"./ScrollViewGesture\";\nimport { CTX } from \"./store\";\nimport type { ICarouselInstance, TCarouselProps } from \"./types\";\nimport { computedRealIndexWithAutoFillData } from \"./utils/computedWithAutoFillData\";\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n  (_props, ref) => {\n    const props = useInitProps(_props);\n\n    const {\n      testID,\n      loop,\n      autoFillData,\n      // Fill data with autoFillData\n      data,\n      // Length of fill data\n      dataLength,\n      // Raw data that has not been processed\n      rawData,\n      // Length of raw data\n      rawDataLength,\n      mode,\n      style,\n      width,\n      height,\n      vertical,\n      autoPlay,\n      windowSize,\n      autoPlayReverse,\n      autoPlayInterval,\n      scrollAnimationDuration,\n      withAnimation,\n      renderItem,\n      onScrollEnd,\n      onSnapToItem,\n      onScrollBegin,\n      onProgressChange,\n      customAnimation,\n      defaultIndex,\n    } = props;\n\n    const commonVariables = useCommonVariables(props);\n    const { size, handlerOffset } = commonVariables;\n\n    const offsetX = useDerivedValue(() => {\n      const totalSize = size * dataLength;\n      const x = handlerOffset.value % totalSize;\n\n      if (!loop)\n        return handlerOffset.value;\n\n      return isNaN(x) ? 0 : x;\n    }, [loop, size, dataLength]);\n\n    usePropsErrorBoundary({ ...props, dataLength });\n    useOnProgressChange({\n      autoFillData,\n      loop,\n      size,\n      offsetX,\n      rawDataLength,\n      onProgressChange,\n    });\n\n    const carouselController = useCarouselController({\n      loop,\n      size,\n      dataLength,\n      autoFillData,\n      handlerOffset,\n      withAnimation,\n      defaultIndex,\n      onScrollEnd: () => runOnJS(_onScrollEnd)(),\n      onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n      duration: scrollAnimationDuration,\n    });\n\n    const { next, prev, scrollTo, getSharedIndex, getCurrentIndex }\n            = carouselController;\n\n    const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n      autoPlay,\n      autoPlayInterval,\n      autoPlayReverse,\n      carouselController,\n    });\n\n    const _onScrollEnd = React.useCallback(() => {\n      const _sharedIndex = Math.round(getSharedIndex());\n\n      const realIndex = computedRealIndexWithAutoFillData({\n        index: _sharedIndex,\n        dataLength: rawDataLength,\n        loop,\n        autoFillData,\n      });\n\n      if (onSnapToItem)\n        onSnapToItem(realIndex);\n\n      if (onScrollEnd)\n        onScrollEnd(realIndex);\n    }, [\n      loop,\n      autoFillData,\n      rawDataLength,\n      getSharedIndex,\n      onSnapToItem,\n      onScrollEnd,\n    ]);\n\n    const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n      pauseAutoPlay();\n      onScrollBegin?.();\n    }, [onScrollBegin, pauseAutoPlay]);\n\n    const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n      startAutoPlay();\n      _onScrollEnd();\n    }, [_onScrollEnd, startAutoPlay]);\n\n    const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n      pauseAutoPlay,\n    ]);\n\n    const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n      startAutoPlay,\n    ]);\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        next,\n        prev,\n        getCurrentIndex,\n        scrollTo,\n      }),\n      [getCurrentIndex, next, prev, scrollTo],\n    );\n\n    const visibleRanges = useVisibleRanges({\n      total: dataLength,\n      viewSize: size,\n      translation: handlerOffset,\n      windowSize,\n    });\n\n    const layoutConfig = useLayoutConfig({ ...props, size });\n\n    const renderLayout = React.useCallback(\n      (item: any, i: number) => {\n        const realIndex = computedRealIndexWithAutoFillData({\n          index: i,\n          dataLength: rawDataLength,\n          loop,\n          autoFillData,\n        });\n\n        return (\n          <BaseLayout\n            key={i}\n            index={i}\n            handlerOffset={offsetX}\n            visibleRanges={visibleRanges}\n            animationStyle={customAnimation || layoutConfig}\n          >\n            {({ animationValue }) =>\n              renderItem({\n                item,\n                index: realIndex,\n                animationValue,\n              })\n            }\n          </BaseLayout>\n        );\n      },\n      [\n        loop,\n        rawData,\n        offsetX,\n        visibleRanges,\n        autoFillData,\n        renderItem,\n        layoutConfig,\n        customAnimation,\n      ],\n    );\n\n    return (\n      <CTX.Provider value={{ props, common: commonVariables }}>\n        <ScrollViewGesture\n          key={mode}\n          size={size}\n          translation={handlerOffset}\n          style={[\n            styles.container,\n            {\n              width: width || \"100%\",\n              height: height || \"100%\",\n            },\n            style,\n            vertical\n              ? styles.itemsVertical\n              : styles.itemsHorizontal,\n          ]}\n          testID={testID}\n          onScrollBegin={scrollViewGestureOnScrollBegin}\n          onScrollEnd={scrollViewGestureOnScrollEnd}\n          onTouchBegin={scrollViewGestureOnTouchBegin}\n          onTouchEnd={scrollViewGestureOnTouchEnd}\n        >\n          {data.map(renderLayout)}\n        </ScrollViewGesture>\n      </CTX.Provider>\n    );\n  },\n);\n\nexport default Carousel as <T extends any>(\n  props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: \"hidden\",\n  },\n  itemsHorizontal: {\n    flexDirection: \"row\",\n  },\n  itemsVertical: {\n    flexDirection: \"column\",\n  },\n});\n"]},"metadata":{},"sourceType":"script"}