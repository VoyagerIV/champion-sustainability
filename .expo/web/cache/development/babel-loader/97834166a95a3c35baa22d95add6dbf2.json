{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NoButtonSB } from \"../components/SearchBar\";\nimport Categories from \"../components/Categories\";\nimport { SliderWithVal } from \"../components/Slider\";\nimport CustomButton from \"../components/CustomButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Search = function Search(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchInput = _useState2[0],\n    setSearchInput = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    distance = _useState4[0],\n    setDistance = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    categories = _useState6[0],\n    setCategories = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    canSubmit = _useState8[0],\n    setCanSubmit = _useState8[1];\n  useEffect(function () {\n    if (searchInput.trim() !== \"\" || categories.length > 0) {\n      if (canSubmit === false) setCanSubmit(true);\n    } else {\n      if (canSubmit === true) setCanSubmit(false);\n    }\n  }, [searchInput, distance, categories]);\n  return _jsxs(View, {\n    style: styles.screenContainer,\n    children: [_jsx(View, {\n      style: styles.sbContainer,\n      children: _jsx(NoButtonSB, {\n        value: searchInput,\n        setValue: setSearchInput\n      })\n    }), _jsx(View, {\n      style: styles.sliderContainer,\n      children: _jsx(SliderWithVal, {\n        message: \" km from me\",\n        start: 0,\n        end: 10,\n        step: 1,\n        value: distance,\n        setValue: setDistance\n      })\n    }), _jsx(Categories, {\n      selected: categories,\n      setSelected: setCategories\n    }), _jsx(CustomButton, {\n      title: \"Search\",\n      onPress: function onPress() {\n        navigation.navigate(\"SearchResults\", {\n          searchInput: searchInput,\n          distance: distance,\n          categories: categories\n        });\n      },\n      disabled: !canSubmit,\n      style: styles.searchButton\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingHorizontal: 23,\n    paddingTop: 150\n  },\n  searchButton: {\n    marginTop: 15\n  },\n  sbContainer: {\n    width: \"100%\"\n  },\n  sliderContainer: {\n    width: \"100%\",\n    marginTop: 10\n  }\n});\nexport default Search;","map":{"version":3,"names":["useState","useEffect","NoButtonSB","Categories","SliderWithVal","CustomButton","Search","navigation","searchInput","setSearchInput","distance","setDistance","categories","setCategories","canSubmit","setCanSubmit","trim","length","styles","screenContainer","sbContainer","sliderContainer","navigate","searchButton","StyleSheet","create","width","display","alignItems","paddingHorizontal","paddingTop","marginTop"],"sources":["/home/mohammad/Documents/GitHub/champion-sustainability/screens/Search.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { StyleSheet, View, Text, Image, TouchableOpacity } from \"react-native\";\n\nimport { NoButtonSB } from \"../components/SearchBar\";\nimport Categories from \"../components/Categories\";\nimport { SliderWithVal } from \"../components/Slider\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst Search = ({ navigation }) => {\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [distance, setDistance] = useState(0);\n    const [categories, setCategories] = useState([]);\n    \n    const [canSubmit, setCanSubmit] = useState(false);\n    \n    useEffect(() => {\n      // if categories or search input is given, allow search submission\n      if (searchInput.trim() !== \"\" || categories.length > 0) {\n        if (canSubmit === false) setCanSubmit(true)\n      } else {\n        // otherwise, disable submission\n        if (canSubmit === true) setCanSubmit(false)\n      }\n    }, [searchInput, distance, categories])\n\n    return (\n      <View style={styles.screenContainer}>\n        <View style={styles.sbContainer}>\n          <NoButtonSB value={searchInput} setValue={setSearchInput} />\n        </View>\n        <View style={styles.sliderContainer}>\n          <SliderWithVal message=\" km from me\" start={0} end={10} step={1} value={distance} setValue={setDistance} />\n        </View>\n        <Categories selected={categories} setSelected={setCategories}/>\n        <CustomButton\n          title=\"Search\"\n          onPress={() => {\n            navigation.navigate(\"SearchResults\", {\n              searchInput: searchInput,\n              distance: distance,\n              categories: categories\n            });\n          }}\n          disabled={!canSubmit}\n          style={styles.searchButton}\n        />\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screenContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingHorizontal: 23,\n        paddingTop: 150\n    },\n    searchButton: {\n        marginTop: 15,\n    },\n    sbContainer: {\n        width: \"100%\",\n    },\n    sliderContainer: {\n        width: \"100%\",\n        marginTop: 10\n    }\n});\n\nexport default Search;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAI5C,SAASC,UAAU;AACnB,OAAOC,UAAU;AACjB,SAASC,aAAa;AACtB,OAAOC,YAAY;AAAmC;AAAA;AAEtD,IAAMC,MAAM,GAAG,SAATA,MAAM,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACxB,gBAAsCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CQ,WAAW;IAAEC,cAAc;EAClC,iBAAgCT,QAAQ,CAAC,CAAC,CAAC;IAAA;IAApCU,QAAQ;IAAEC,WAAW;EAC5B,iBAAoCX,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCY,UAAU;IAAEC,aAAa;EAEhC,iBAAkCb,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1Cc,SAAS;IAAEC,YAAY;EAE9Bd,SAAS,CAAC,YAAM;IAEd,IAAIO,WAAW,CAACQ,IAAI,EAAE,KAAK,EAAE,IAAIJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;MACtD,IAAIH,SAAS,KAAK,KAAK,EAAEC,YAAY,CAAC,IAAI,CAAC;IAC7C,CAAC,MAAM;MAEL,IAAID,SAAS,KAAK,IAAI,EAAEC,YAAY,CAAC,KAAK,CAAC;IAC7C;EACF,CAAC,EAAE,CAACP,WAAW,EAAEE,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAEvC,OACE,MAAC,IAAI;IAAC,KAAK,EAAEM,MAAM,CAACC,eAAgB;IAAA,WAClC,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,WAAY;MAAA,UAC9B,KAAC,UAAU;QAAC,KAAK,EAAEZ,WAAY;QAAC,QAAQ,EAAEC;MAAe;IAAG,EACvD,EACP,KAAC,IAAI;MAAC,KAAK,EAAES,MAAM,CAACG,eAAgB;MAAA,UAClC,KAAC,aAAa;QAAC,OAAO,EAAC,aAAa;QAAC,KAAK,EAAE,CAAE;QAAC,GAAG,EAAE,EAAG;QAAC,IAAI,EAAE,CAAE;QAAC,KAAK,EAAEX,QAAS;QAAC,QAAQ,EAAEC;MAAY;IAAG,EACtG,EACP,KAAC,UAAU;MAAC,QAAQ,EAAEC,UAAW;MAAC,WAAW,EAAEC;IAAc,EAAE,EAC/D,KAAC,YAAY;MACX,KAAK,EAAC,QAAQ;MACd,OAAO,EAAE,mBAAM;QACbN,UAAU,CAACe,QAAQ,CAAC,eAAe,EAAE;UACnCd,WAAW,EAAEA,WAAW;UACxBE,QAAQ,EAAEA,QAAQ;UAClBE,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAE;MACF,QAAQ,EAAE,CAACE,SAAU;MACrB,KAAK,EAAEI,MAAM,CAACK;IAAa,EAC3B;EAAA,EACG;AAEb,CAAC;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC7BN,eAAe,EAAE;IACbO,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EAChB,CAAC;EACDP,YAAY,EAAE;IACVQ,SAAS,EAAE;EACf,CAAC;EACDX,WAAW,EAAE;IACTM,KAAK,EAAE;EACX,CAAC;EACDL,eAAe,EAAE;IACbK,KAAK,EAAE,MAAM;IACbK,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAezB,MAAM"},"metadata":{},"sourceType":"module"}