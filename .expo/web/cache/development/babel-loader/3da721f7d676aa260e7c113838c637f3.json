{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInitProps = useInitProps;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _computedWithAutoFillData = require(\"../utils/computedWithAutoFillData\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction useInitProps(props) {\n  var _props$enableSnap;\n  var _props$defaultIndex = props.defaultIndex,\n    defaultIndex = _props$defaultIndex === void 0 ? 0 : _props$defaultIndex,\n    _props$data = props.data,\n    rawData = _props$data === void 0 ? [] : _props$data,\n    _props$loop = props.loop,\n    loop = _props$loop === void 0 ? true : _props$loop,\n    _props$enabled = props.enabled,\n    enabled = _props$enabled === void 0 ? true : _props$enabled,\n    _props$autoPlayInterv = props.autoPlayInterval,\n    _autoPlayInterval = _props$autoPlayInterv === void 0 ? 1000 : _props$autoPlayInterv,\n    _props$scrollAnimatio = props.scrollAnimationDuration,\n    scrollAnimationDuration = _props$scrollAnimatio === void 0 ? 500 : _props$scrollAnimatio,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    _props$panGestureHand = props.panGestureHandlerProps,\n    panGestureHandlerProps = _props$panGestureHand === void 0 ? {} : _props$panGestureHand,\n    _props$pagingEnabled = props.pagingEnabled,\n    pagingEnabled = _props$pagingEnabled === void 0 ? true : _props$pagingEnabled,\n    _props$autoFillData = props.autoFillData,\n    autoFillData = _props$autoFillData === void 0 ? true : _props$autoFillData,\n    _props$snapEnabled = props.snapEnabled,\n    snapEnabled = _props$snapEnabled === void 0 ? (_props$enableSnap = props.enableSnap) != null ? _props$enableSnap : true : _props$snapEnabled,\n    _width = props.width,\n    _height = props.height;\n  var width = Math.round(_width || 0);\n  var height = Math.round(_height || 0);\n  var autoPlayInterval = Math.max(_autoPlayInterval, 0);\n  var data = _react.default.useMemo(function () {\n    return (0, _computedWithAutoFillData.computedFillDataWithAutoFillData)({\n      loop: loop,\n      autoFillData: autoFillData,\n      data: rawData,\n      dataLength: rawData.length\n    });\n  }, [rawData, loop, autoFillData]);\n  var dataLength = data.length;\n  var rawDataLength = rawData.length;\n  if (props.mode === \"vertical-stack\" || props.mode === \"horizontal-stack\") {\n    var _props$modeConfig$sho, _props$modeConfig;\n    if (!props.modeConfig) props.modeConfig = {};\n    props.modeConfig.showLength = (_props$modeConfig$sho = (_props$modeConfig = props.modeConfig) == null ? void 0 : _props$modeConfig.showLength) != null ? _props$modeConfig$sho : dataLength - 1;\n  }\n  return _objectSpread(_objectSpread({}, props), {}, {\n    defaultIndex: defaultIndex,\n    autoFillData: autoFillData,\n    data: data,\n    dataLength: dataLength,\n    rawData: rawData,\n    rawDataLength: rawDataLength,\n    loop: loop,\n    enabled: enabled,\n    autoPlayInterval: autoPlayInterval,\n    scrollAnimationDuration: scrollAnimationDuration,\n    style: style,\n    panGestureHandlerProps: panGestureHandlerProps,\n    pagingEnabled: pagingEnabled,\n    snapEnabled: snapEnabled,\n    width: width,\n    height: height\n  });\n}","map":{"version":3,"mappings":";;;;;;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AAuBO,SAASA,YAAT,CACLC,KADK,EAEwB;EAAA;EAC7B,0BAcIA,KAdJ,CACEC,YADF;IACEA,YADF,oCACiB,CADjB;IAAAC,cAcIF,KAdJ,CAEEG,IAFF;IAEQC,OAFR,4BAEkB,EAFlB;IAAAC,cAcIL,KAdJ,CAGEM,IAHF;IAGEA,IAHF,4BAGS,IAHT;IAAAC,iBAcIP,KAdJ,CAIEQ,OAJF;IAIEA,OAJF,+BAIY,IAJZ;IAAAC,wBAcIT,KAdJ,CAKEU,gBALF;IAKoBC,iBALpB,sCAKwC,IALxC;IAAAC,wBAcIZ,KAdJ,CAMEa,uBANF;IAMEA,uBANF,sCAM4B,GAN5B;IAAAC,eAcId,KAdJ,CAOEe,KAPF;IAOEA,KAPF,6BAOU,EAPV;IAAAC,wBAcIhB,KAdJ,CAQEiB,sBARF;IAQEA,sBARF,sCAQ2B,EAR3B;IAAAC,uBAcIlB,KAdJ,CASEmB,aATF;IASEA,aATF,qCASkB,IATlB;IAAAC,sBAcIpB,KAdJ,CAUEqB,YAVF;IAUEA,YAVF,oCAUiB,IAVjB;IAAAC,qBAcItB,KAdJ,CAWEuB,WAXF;IAWEA,WAXF,wDAWgBvB,KAAK,CAACwB,UAXtB,gCAWoC,IAXpC;IAYSC,MAZT,GAcIzB,KAdJ,CAYE0B,KAZF;IAaUC,OAbV,GAcI3B,KAdJ,CAaE4B,MAbF;EAgBA,IAAMF,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWL,MAAM,IAAI,CAArB,CAAd;EACA,IAAMG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,IAAI,CAAtB,CAAf;EACA,IAAMjB,gBAAgB,GAAGmB,IAAI,CAACE,GAAL,CAASpB,iBAAT,EAA4B,CAA5B,CAAzB;EAEA,IAAMR,IAAI,GAAG6B,eAAMC,OAAN,CACX,YAAM;IACJ,OAAO,gEAAoC;MACzC3B,IAAI,EAAJA,IADyC;MAEzCe,YAAY,EAAZA,YAFyC;MAGzClB,IAAI,EAAEC,OAHmC;MAIzC8B,UAAU,EAAE9B,OAAO,CAAC+B;IAJqB,CAApC,CAAP;EAMD,CARU,EASX,CAAC/B,OAAD,EAAUE,IAAV,EAAgBe,YAAhB,CATW,CAAb;EAYA,IAAMa,UAAU,GAAG/B,IAAI,CAACgC,MAAxB;EACA,IAAMC,aAAa,GAAGhC,OAAO,CAAC+B,MAA9B;EAEA,IAAInC,KAAK,CAACqC,IAAN,KAAe,gBAAf,IAAmCrC,KAAK,CAACqC,IAAN,KAAe,kBAAtD,EAA0E;IAAA;IACxE,IAAI,CAACrC,KAAK,CAACsC,UAAX,EACEtC,KAAK,CAACsC,UAAN,GAAmB,EAAnB;IAEFtC,KAAK,CAACsC,UAAN,CAAiBC,UAAjB,iDAA8BvC,KAAK,CAACsC,UAApC,qBAA8BE,kBAAkBD,UAAhD,oCAA8DL,UAAU,GAAG,CAA3E;EACD;EAED,uCACKlC,KADL;IAEEC,YAAY,EAAZA,YAFF;IAGEoB,YAAY,EAAZA,YAHF;IAKElB,IAAI,EAAJA,IALF;IAOE+B,UAAU,EAAVA,UAPF;IASE9B,OAAO,EAAPA,OATF;IAWEgC,aAAa,EAAbA,aAXF;IAYE9B,IAAI,EAAJA,IAZF;IAaEE,OAAO,EAAPA,OAbF;IAcEE,gBAAgB,EAAhBA,gBAdF;IAeEG,uBAAuB,EAAvBA,uBAfF;IAgBEE,KAAK,EAALA,KAhBF;IAiBEE,sBAAsB,EAAtBA,sBAjBF;IAkBEE,aAAa,EAAbA,aAlBF;IAmBEI,WAAW,EAAXA,WAnBF;IAoBEG,KAAK,EAALA,KApBF;IAqBEE,MAAM,EAANA;EArBF;AAuBD","names":["useInitProps","props","defaultIndex","_props$data","data","rawData","_props$loop","loop","_props$enabled","enabled","_props$autoPlayInterv","autoPlayInterval","_autoPlayInterval","_props$scrollAnimatio","scrollAnimationDuration","_props$style","style","_props$panGestureHand","panGestureHandlerProps","_props$pagingEnabled","pagingEnabled","_props$autoFillData","autoFillData","_props$snapEnabled","snapEnabled","enableSnap","_width","width","_height","height","Math","round","max","React","useMemo","dataLength","length","rawDataLength","mode","modeConfig","showLength","_props$modeConfig"],"sources":["useInitProps.ts"],"sourcesContent":["import React from \"react\";\n\nimport type { TCarouselProps } from \"../types\";\nimport { computedFillDataWithAutoFillData } from \"../utils/computedWithAutoFillData\";\n\ntype TGetRequiredProps<P extends keyof TCarouselProps> = Record<\nP,\nRequired<TCarouselProps>[P]\n>;\n\nexport type TInitializeCarouselProps<T> = TCarouselProps<T> &\nTGetRequiredProps<\n| \"defaultIndex\"\n| \"loop\"\n| \"width\"\n| \"height\"\n| \"scrollAnimationDuration\"\n| \"autoPlayInterval\"\n| \"autoFillData\"\n> & {\n  // Raw data that has not been processed\n  rawData: T[]\n  dataLength: number\n  rawDataLength: number\n};\n\nexport function useInitProps<T>(\n  props: TCarouselProps<T>,\n): TInitializeCarouselProps<T> {\n  const {\n    defaultIndex = 0,\n    data: rawData = [],\n    loop = true,\n    enabled = true,\n    autoPlayInterval: _autoPlayInterval = 1000,\n    scrollAnimationDuration = 500,\n    style = {},\n    panGestureHandlerProps = {},\n    pagingEnabled = true,\n    autoFillData = true,\n    snapEnabled = props.enableSnap ?? true,\n    width: _width,\n    height: _height,\n  } = props;\n\n  const width = Math.round(_width || 0);\n  const height = Math.round(_height || 0);\n  const autoPlayInterval = Math.max(_autoPlayInterval, 0);\n\n  const data = React.useMemo<T[]>(\n    () => {\n      return computedFillDataWithAutoFillData<T>({\n        loop,\n        autoFillData,\n        data: rawData,\n        dataLength: rawData.length,\n      });\n    },\n    [rawData, loop, autoFillData],\n  );\n\n  const dataLength = data.length;\n  const rawDataLength = rawData.length;\n\n  if (props.mode === \"vertical-stack\" || props.mode === \"horizontal-stack\") {\n    if (!props.modeConfig)\n      props.modeConfig = {};\n\n    props.modeConfig.showLength = props.modeConfig?.showLength ?? dataLength - 1;\n  }\n\n  return {\n    ...props,\n    defaultIndex,\n    autoFillData,\n    // Fill data with autoFillData\n    data,\n    // Length of fill data\n    dataLength,\n    // Raw data that has not been processed\n    rawData,\n    // Length of raw data\n    rawDataLength,\n    loop,\n    enabled,\n    autoPlayInterval,\n    scrollAnimationDuration,\n    style,\n    panGestureHandlerProps,\n    pagingEnabled,\n    snapEnabled,\n    width,\n    height,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}